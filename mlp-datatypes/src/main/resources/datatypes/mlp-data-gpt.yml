openapi: 3.0.1
info:
  title: Datatypes specification for GPT task type
  version: v0
paths: { }

components:
  schemas:
    ChatCompletionRequest:
      type: object
      required:
        - messages
      properties:
        model:
          type: string
        messages:
          type: array
          items:
            $ref: '#/components/schemas/ChatMessage'
        stream:
          type: boolean
        tools:
          type: array
          items:
            $ref: '#/components/schemas/Tool'
        tool_choice:
          $ref: '#/components/schemas/ToolChoice'
        logprobs:
          type: boolean
        top_logprobs:
          type: integer

    ChatRole:
      type: string
      enum:
        - system
        - user
        - assistant
        - marker
        - tool

    ChatMessage:
      type: object
      required:
        - role
      properties:
        role:
          $ref: '#/components/schemas/ChatRole'
        content:
          type: object
        tool_call_id:
          type: string
        name:
          type: string
        tool_calls:
          type: array
          items:
            $ref: '#/components/schemas/ToolCall'
      oneOf:
        - $ref: '#/components/schemas/TextChatMessage'
        - $ref: '#/components/schemas/PartsChatMessage'
      discriminator:
        propertyName: content
      x-openclass: true
      x-customDeserialization: com.mlp.api.ChatMessageDeserializer

    TextChatMessage:
      allOf:
        - $ref: '#/components/schemas/ChatMessage'
        - type: object
          properties:
            content:
              type: string
              x-isInherited: true
      x-parentIsClass: true

    PartsChatMessage:
      allOf:
        - $ref: '#/components/schemas/ChatMessage'
        - type: object
          properties:
            content:
              type: array
              items:
                $ref: '#/components/schemas/ContentPart'
              x-isInherited: true
      x-parentIsClass: true

    ContentPart:
      type: object
      required:
        - type
      properties:
        type:
          $ref: '#/components/schemas/ContentPartType'
      discriminator:
        propertyName: type
        mapping:
          text: 'TextContentPart'
          image_url: 'ImageContentPart'


    ContentPartType:
      type: string
      enum:
        - text
        - image_url

    TextContentPart:
      type: object
      allOf:
        - $ref: '#/components/schemas/ContentPart'
        - type: object
          required:
            - text
          properties:
            text:
              type: string

    ImageContentPart:
      type: object
      allOf:
        - $ref: '#/components/schemas/ContentPart'
        - type: object
          properties:
            image_url:
              $ref: '#/components/schemas/ImageContentPartImageUrl'


    ImageContentPartImageUrl:
      type: object
      required:
        - url
      properties:
        url:
          type: string
        detail:
          type: string

    Tool:
      type: object
      required:
        - type
        - function
      properties:
        type:
          $ref: '#/components/schemas/ToolType'
        function:
          $ref: '#/components/schemas/Function'

    ToolType:
      type: string
      enum:
        - function

    Function:
      type: object
      required:
        - name
      properties:
        description:
          type: string
        name:
          type: string
        parameters:
          type: object

    ToolChoice:
      oneOf:
        - $ref: '#/components/schemas/ToolChoiceEnum'
        - $ref: '#/components/schemas/NamedToolChoice'
      # x-openclass: true
      # x-customDeserialization: com.mlp.api.ChatMessageDeserializer

    ToolChoiceEnum:
      type: string
      enum:
        - none
        - auto
        - required

    NamedToolChoice:
      type: object
      required:
        - type
        - function
      properties:
        type:
          $ref: '#/components/schemas/ToolType'
        function:
          type: object
          required:
            - name
          properties:
            name:
              type: string


    ToolCall:
      type: object
      required:
        - id
        - type
        - function
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/ToolType'
        function:
          $ref: '#/components/schemas/FunctionCall'

    FunctionCall:
      type: object
      required:
        - name
        - arguments
      properties:
        name:
          type: string
        arguments:
          type: string


    ChatCompletionConfig:
      type: object
      properties:
        model:
          type: string
        stream:
          type: boolean
        max_tokens:
          type: number
        temperature:
          type: number
          format: double
    # TODO: support codegen
    #      additionalProperties: true

    ChatCompletionResult:
      type: object
      required:
        - choices
      properties:
        model:
          type: string
        choices:
          type: array
          items:
            $ref: '#/components/schemas/ChatCompletionChoice'
        usage: # for streaming=true responses we will fill this field in the last chunk
          $ref: '#/components/schemas/Usage'

    ChatCompletionChoice:
      type: object
      required:
        - index
      properties:
        index:
          type: integer
        message: # for streaming=false responses
          $ref: '#/components/schemas/ChatMessage'
        delta: # for streaming=true responses
          $ref: '#/components/schemas/ChatMessage'
        finish_reason:
          type: string
          enum:
            - stop
            - length
            - tool_calls
        logprobs:
          $ref: '#/components/schemas/Logprobs'

    Usage:
      type: object
      required:
        - prompt_tokens
        - completion_tokens
        - total_tokens
      properties:
        prompt_tokens:
          type: integer
        completion_tokens:
          type: integer
        total_tokens:
          type: integer

    Logprobs:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/LogprobContentItem'

    LogprobContentItem:
      type: object
      properties:
        token:
          type: string
        logprob:
          type: number
        bytes:
          type: array
          items:
            type: integer
        top_logprobs:
          type: array
          items:
            $ref: '#/components/schemas/TopLogprobsItem'

    TopLogprobsItem:
      type: object
      properties:
        token:
          type: string
        logprob:
          type: number
        bytes:
          type: array
          items:
            type: integer

    CompletionRequest:
      type: object
      required:
        - model
        - prompt
      properties:
        model:
          type: string
        prompt:
          type: string
        suffix:
          type: string
          nullable: true
        max_tokens:
          type: integer
          nullable: true
        temperature:
          type: number
          format: double
          nullable: true
        top_p:
          type: number
          format: double
          nullable: true
        n:
          type: integer
          nullable: true
        stream:
          type: boolean
          nullable: true
        logprobs:
          type: integer
          nullable: true
        echo:
          type: boolean
          nullable: true
        stop:
          type: array
          items:
            type: string
          nullable: true
        presence_penalty:
          type: number
          format: double
          nullable: true
        frequency_penalty:
          type: number
          format: double
          nullable: true
        best_of:
          type: integer
          nullable: true
        logit_bias:
          type: object
          additionalProperties:
            type: integer
          nullable: true
        user:
          type: string
          nullable: true

    CompletionResult:
      type: object
      required:
        - created
        - model
        - usage
      properties:
        id:
          type: string
          nullable: true
        object:
          type: string
          nullable: true
        created:
          type: integer
          format: int64
        model:
          type: string
        choices:
          type: array
          items:
            $ref: '#/components/schemas/CompletionChoice'
          nullable: true
        usage:
          $ref: '#/components/schemas/Usage'

    CompletionChoice:
      type: object
      properties:
        text:
          type: string
          nullable: true
        index:
          type: integer
          nullable: true
        logprobs:
          $ref: '#/components/schemas/LogProbResult'
        finish_reason:
          type: string
          nullable: true

    LogProbResult:
      type: object
      properties:
        tokens:
          type: array
          items:
            type: string
          nullable: true
        token_logprobs:
          type: array
          items:
            type: number
            format: double
          nullable: true
        top_logprobs:
          type: array
          items:
            type: object
            additionalProperties:
              type: number
              format: double
          nullable: true
        textOffset:
          type: array
          items:
            type: integer
          nullable: true
